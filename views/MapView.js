// COPYRIGHT Â© 2020 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.15/esri/copyright.txt for details.

define(["require","exports","../core/tsSupport/declareExtendsHelper","../core/tsSupport/decorateHelper","../core/tsSupport/generatorHelper","../core/tsSupport/awaiterHelper","../core/Error","../core/has","../core/Logger","../core/promiseUtils","../core/screenUtils","../core/watchUtils","../core/workers","../core/accessorSupport/decorators","./BreakpointsOwner","./DOMContainer","./Magnifier","./MapViewBase","./2d/input/MapViewInputManager","./2d/support/HighlightOptions","./support/screenshotUtils","./support/WebGLRequirements","./ui/2d/DefaultUI2D","@dojo/framework/shim/Promise"],(function(e,t,i,r,n,a,o,s,p,h,u,c,l,d,g,y,w,f,v,m,V,b,_){var M,O,S,E,L,P=p.getLogger("esri.views.MapView");function k(e){return!("layerViews"in e)&&null!=e.container}return function(t){function p(e){var i=t.call(this,e)||this;return i._magnifierView=null,i._stage=null,i._resolveWhenReady=[],i.graphicsView=null,i.highlightOptions=new m,i.magnifier=new w,i.inputManager=new v({view:i}),i.mapViewNavigation=null,i.supersampleScreenhotsEnabled=!0,i.ui=new _,i.rendering=!1,l.initialize(),i}return i(p,t),p.prototype.destroy=function(){this.inputManager.destroy(),this._set("inputManager",null)},Object.defineProperty(p.prototype,"background",{get:function(){return this.get("map.initialViewProperties.background")||null},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"navigating",{get:function(){return!(!this.mapViewNavigation||!this.mapViewNavigation.interacting)},enumerable:!0,configurable:!0}),p.prototype.toMap=function(e){if(u.isSupportedScreenPointEvent(e)){var t=u.createScreenPointFromSupportedEvent(this,e);return this.inherited(arguments,[t])}return this.inherited(arguments)},p.prototype.hitTest=function(e){var t=u.isSupportedScreenPointEvent(e)?u.createScreenPointFromSupportedEvent(this,e):e;if(!this.ready||isNaN(t.x)||isNaN(t.y))return h.resolve({screenPoint:t,results:[]});var i=this.toMap(t),r=[this.graphicsView];return r.push.apply(r,this.allLayerViews.toArray().reverse()),h.all(r.map((function(e){return e&&e.hitTest?e.hitTest(t.x,t.y):null}))).then((function(e){return{screenPoint:t,results:e.filter((function(e){return null!=e})).map((function(e){return{mapPoint:i,graphic:e}}))}}))},p.prototype.takeScreenshot=function(e){return this.ready?this._stage.takeScreenshot(V.toRenderSettings(e,this),this.allLayerViews):h.reject("Map view cannot be used before it is ready")},p.prototype.on=function(e,t,i,r){var n=this.inputManager&&this.viewEvents.on(e,t,i,r);return n||this.inherited(arguments)},p.prototype.hasEventListener=function(e){return this.inherited(arguments)||this.viewEvents.hasHandler(e)},p.prototype.whenLayerView=function(e){return this.inherited(arguments)},p.prototype.graphicChanged=function(e){this.graphicsView&&this.graphicsView.graphicUpdateHandler(e)},p.prototype.whenReady=function(){var e=this;return h.create((function(t){e.ready?t(e):e._resolveWhenReady.push(t)}))},p.prototype.forceDOMReadyCycle=function(){this.forceReadyCycle()},p.prototype.validate=function(){var t=b.check({supportsMajorWebPerformanceCaveat:!0});return s("safari")&&s("safari")<9&&(t=new o("mapview:browser-not-supported","This browser is not supported by MapView (Safari < 9)",{type:"safari",requiredVersion:9,detectedVersion:s("safari")})),t?(P.warn("#validate()",t.message),h.reject(t)):function(){return a(this,void 0,void 0,(function(){var t,i,r,a,o,s,p;return n(this,(function(n){switch(n.label){case 0:return[4,Promise.all([new Promise((function(t,i){e(["./webgl"],t,i)})),new Promise((function(t,i){e(["./2d/mapViewDeps"],t,i)})),new Promise((function(t,i){e(["./2d/engine"],t,i)}))])];case 1:return t=n.sent(),i=t[1],r=i.GraphicsView2D,a=i.LabelManager,o=i.MapViewNavigation,s=i.MagnifierView2D,p=t[2].Stage,O=r,S=a,E=o,L=s,M=p,[2]}}))}))}()},p.prototype._startup=function(){var e=this;this.timeline.begin("MapView Startup"),this.inherited(arguments),this.graphics.owner=this;var t={deactivatedWebGLExtensions:this.deactivatedWebGLExtensions,debugWebGLExtensions:this.debugWebGLExtensions},i=new M(this.surface,{canvas:this.renderCanvas,supersampleScreenshots:this.supersampleScreenhotsEnabled,contextOptions:t,renderingOptions:this.renderingOptions,timeline:this.timeline}),r=new O({view:this,graphics:this.graphics}),n=new E({view:this,animationManager:this.animationManager}),a=new S({view:this});this._magnifierView=new L,this._magnifierView.magnifier=this.magnifier,this._stage=i,this.frameTask.graphicsView=r,this._set("graphicsView",r),this._set("mapViewNavigation",n),this._set("labelManager",a),this.handles.add([this.allLayerViews.on("change",(function(){return e._updateStageChildren()})),i.on("post-render",(function(){return e._set("rendering",e.allLayerViews.some((function(e){return!("layerViews"in e)&&!0===e.rendering})))})),i.on("webgl-error",(function(t){return e.fatalError=t.error})),c.init(this,"stationary",(function(e){return i.stationary=e}),!0),c.init(this,"state.id",(function(){return i.state=e.state}),!0),c.init(this,"background",(function(e){return i.background=e}),!0),c.init(this,"magnifier",(function(t){return e._magnifierView.magnifier=t}),!0),c.init(this,"renderingOptions",(function(e){return i.renderingOptions=e}),!0),c.init(this,"highlightOptions",(function(){return i.highlightOptions=e.highlightOptions}),!0)],"map-view"),i.state=this.state,i.background=this.background,this._updateStageChildren();var o=this._resolveWhenReady;this._resolveWhenReady=[],o.forEach((function(t){return t(e)})),this.timeline.end("MapView Startup")},p.prototype._teardown=function(){this.handles.remove("map-view"),this.layerViewManager.clear(),this.labelManager.destroy(),this._magnifierView.destroy(),this._stage.destroy();var e=this.graphicsView;e.destroy(),this.mapViewNavigation.destroy(),this._stage=null,this._set("graphicsView",null),this._magnifierView=null,this._set("labelManager",null),this._set("mapViewNavigation",null),this.graphics.owner=null,this.inherited(arguments)},p.prototype._updateStageChildren=function(){var e=this;this._stage.removeAllChildren(),this.allLayerViews.filter(k).forEach((function(t,i){e._stage.addChildAt(t.container,i)}));var t=this.graphicsView;this._stage.addChild(t.container),this._stage.addChild(this._magnifierView)},r([d.property({readOnly:!0,dependsOn:["map.initialViewProperties?.background"]})],p.prototype,"background",null),r([d.property()],p.prototype,"graphicsView",void 0),r([d.property({type:m})],p.prototype,"highlightOptions",void 0),r([d.property({type:w})],p.prototype,"magnifier",void 0),r([d.property({readOnly:!0})],p.prototype,"inputManager",void 0),r([d.property({readOnly:!0})],p.prototype,"mapViewNavigation",void 0),r([d.property({dependsOn:["mapViewNavigation.interacting"],type:Boolean})],p.prototype,"navigating",null),r([d.property({type:Boolean,constructOnly:!0})],p.prototype,"supersampleScreenhotsEnabled",void 0),r([d.property({type:_})],p.prototype,"ui",void 0),r([d.property({readOnly:!0})],p.prototype,"rendering",void 0),r([d.property({constructOnly:!0})],p.prototype,"renderCanvas",void 0),r([d.property({constructOnly:!0})],p.prototype,"deactivatedWebGLExtensions",void 0),r([d.property({constructOnly:!0})],p.prototype,"debugWebGLExtensions",void 0),p=r([d.subclass("esri.views.MapView")],p)}(d.declared(g.BreakpointsOwner(y.DOMContainer(f))))}));