// COPYRIGHT Â© 2020 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.15/esri/copyright.txt for details.

define(["require","exports","../../../core/tsSupport/generatorHelper","../../../core/tsSupport/awaiterHelper","@dojo/framework/shim/array","../../../core/Error","../../../core/promiseUtils","../../../core/libs/gl-matrix-2/mat4","../../../core/libs/gl-matrix-2/mat4f64","../../../core/libs/gl-matrix-2/quat","../../../core/libs/gl-matrix-2/quatf32","../../../core/libs/gl-matrix-2/vec3","../../../core/libs/gl-matrix-2/vec3f64","../../../geometry/SpatialReference","../../../geometry/support/meshUtils/deduplicate","../../../libs/draco/DracoDecoder","./i3s/I3SBinaryReader","./i3s/I3SGeometryUtil","./i3s/I3SProjectionUtil","./i3s/I3SUtil","../support/orientedBoundingBox","../support/projectionUtils","../webgl-engine/lib/geometryDataUtils","../../webgl/Util"],(function(e,r,t,a,o,n,i,s,f,u,l,c,d,m,v,y,p,b,g,h,A,I,w,x){var S=function(){function e(){}return e.prototype.process=function(r){return a(this,void 0,void 0,(function(){var a;return t(this,(function(t){switch(t.label){case 0:return[4,e.ensureDracoDecoder(r)];case 1:return t.sent(),a=[r.geometryBuffer],[2,{result:this.transform(r,a),transferList:a}]}}))}))},e.prototype.transform=function(e,r){return P(e)?function(e,r){var t=e.mbs,a=e.elevationOffset,i=m.fromJSON(e.indexSR),f=m.fromJSON(e.vertexSR),u=m.fromJSON(e.renderSR),l=g.computeGlobalTransformation(t,a,i,u),c=new Array,d=e.layouts[0],v=e.geometryBuffer,y=new G.DecoderBuffer;y.Init(new Int8Array(v),v.byteLength);var p=new G.Decoder,h=new G.Mesh,A=p.DecodeBufferToMesh(y,h);if(!A.ok())throw G.destroy(h),G.destroy(p),G.destroy(y),new n("draco:decode_error","Error while decoding draco geometry",{message:A.error_msg()});var I=new G.DracoInt32Array,w=new G.MetadataQuerier,x=h.num_points(),S=3*h.num_faces(),U=x<65536,O=G._malloc(S*(U?2:4));if(!(U?p.GetTrianglesUInt16Array(h,O,S):p.GetTrianglesUInt32Array(h,O,S)))throw"GetTrianglesArray failed";var E=U?new Uint16Array(G.HEAPU8.buffer,O,S).slice():new Uint32Array(G.HEAPU8.buffer,O,S).slice();G._free(O);var _=null,P=null,M=p.GetAttributeIdByMetadataEntry(h,"i3s-attribute-type","feature-index");if(-1!==M){var T=p.GetAttributeMetadata(h,M);w.GetIntEntryArray(T,"i3s-feature-ids",I);var B=I.size();if(O=G._malloc(4*B),!I.GetArray(O,B))throw"GetArray failed";_=new Uint32Array(G.HEAPU8.buffer,O,B).slice(),G._free(O);var C=function(e,r,t,a){var o=4*e,i=G._malloc(o),s=r.GetAttribute(t,a);if(!r.GetAttributeUInt32ArrayForAllPoints(t,s,i,e))throw new n("draco:decode_error","Error while getting attribute values",{attributeId:a});var f=new Uint32Array(G.HEAPU8.buffer,i,e).slice();return G._free(i),f}(x,p,h,M);P=function(e,r){for(var t=new Array,a=0;a<e.length;++a){for(var o=e[a],n=r[o];t.length<=n;)t.push(new Array);t[n].push(o)}var i=0,s=new Uint32Array(t.length+1);for(a=0;a<t.length;++a){var f=t[a];s[a]=i;for(var u=0,l=f;u<l.length;u++){o=l[u];e[i++]=o}}return s[t.length]=i,s}(E,C)}for(var H=new ArrayBuffer(d[0].stride*x),q=N(H,d),z=p.GetAttributeId(h,G.POSITION),F=R(3*x,p,h,z),J=q.position,j=p.GetAttributeMetadata(h,z),V=w.HasEntry(j,"i3s-scale_x")?w.GetDoubleEntry(j,"i3s-scale_x"):1,L=w.HasEntry(j,"i3s-scale_y")?w.GetDoubleEntry(j,"i3s-scale_y"):1,k=q.color,Q=p.GetAttributeId(h,G.COLOR),X=-1!==Q,K=X?function(e,r,t,a){var o=e,i=G._malloc(o),s=r.GetAttribute(t,a);if(!r.GetAttributeUInt8ArrayForAllPoints(t,s,i,e))throw new n("draco:decode_error","Error while getting attribute values",{attributeId:a});var f=new Uint8Array(G.HEAPU8.buffer,i,e).slice();return G._free(i),f}(4*x,p,h,Q):o.fill(new Array(4*x),255),W=0;W<x;W++){var Y=W*J.strideIdx+J.offsetIdx;J.data[Y]=F[3*W]*V,J.data[Y+1]=F[3*W+1]*L,J.data[Y+2]=F[3*W+2];var Z=W*k.strideIdx+k.offsetIdx;k.data[Z]=K[4*W],k.data[Z+1]=K[4*W+1],k.data[Z+2]=K[4*W+2],k.data[Z+3]=K[4*W+3]}var $=p.GetAttributeId(h,G.NORMAL);if(e.needNormals&&-1!==$){var ee=q.normalCompressed,re=q.position,te={normals:ee,positions:re,normalInd:E,positionInd:E},ae=e.normalReferenceFrame,oe=R(3*x,p,h,$);b.processAndInterleaveNormals(ae,oe,l,te)}var ne=p.GetAttributeId(h,G.TEX_COORD),ie=q.uv0;if(-1!==ne&&ie){var se=R(2*x,p,h,ne);for(W=0;W<x;W++){var fe=W*ie.strideIdx+ie.offsetIdx;ie.data[fe]=se[2*W],ie.data[fe+1]=se[2*W+1]}}var ue=p.GetAttributeIdByMetadataEntry(h,"i3s-attribute-type","uv-region"),le=q.uvRegion;if(-1!==ue&&le){var ce=function(e,r,t,a){var o=2*e,i=G._malloc(o),s=r.GetAttribute(t,a);if(!r.GetAttributeUInt16ArrayForAllPoints(t,s,i,e))throw new n("draco:decode_error","Error while getting attribute values",{attributeId:a});var f=new Uint16Array(G.HEAPU8.buffer,i,e).slice();return G._free(i),f}(4*x,p,h,ue);for(W=0;W<x;W++){fe=W*le.strideIdx+le.offsetIdx;le.data[fe]=ce[4*W],le.data[fe+1]=ce[4*W+1],le.data[fe+2]=ce[4*W+2],le.data[fe+3]=ce[4*W+3]}}G.destroy(w),G.destroy(I),G.destroy(h),G.destroy(p),G.destroy(y),s.mat4.invert(D,l);var de=q.position,me={globalTrafo:l},ve=H;g.reprojectPoints(de,t,D,a,i,f,u);var ye=b.extractPositionData(ve,d,{originalIndices:E,componentOffsets:P});c.push({layout:d,interleavedVertexData:ve,indices:E,corMatrices:me,hasColors:X,positionData:ye}),r&&(r.push(ve),r.push(E.buffer));return{geometryBuffer:v,componentOffsets:P,featureIds:_,transformedGeometries:c,obb:null}}(e,r):function(e,r){var t=e.geometryData,a=e.geometryIndex,o=e.layouts,n=e.mbs,i=e.elevationOffset,f=m.fromJSON(e.indexSR),u=m.fromJSON(e.renderSR),l=g.computeGlobalTransformation(n,i,f,u);s.mat4.invert(D,l);var d=e.geometryBuffer,y=function(e,r,t){var a,o;e.geometries[0].params.vertexAttributes=t.vertexAttributes;var n=t.featureAttributes;if(n){if(n.faceRange){var i=p.createTypedView(r,n.faceRange),s=n.faceRange.valuesPerElement,f=n.faceRange.count;a=h.convertFlatRangesToOffsets(i,f,s)}var u=n.id;if(u){o=new Uint32Array(u.count);var l=1,c=p.valueType2TypedArrayClassMap[u.valueType];"UInt64"===u.valueType&&(c=Uint32Array,l=2);for(var d=new c(r,u.byteOffset,u.count*u.valuesPerElement*l),m=0;m<u.count;m++){var v=m*u.valuesPerElement*l;if(o[m]=d[v],2===l&&0!==d[v+1])throw new Error("ID exceeded maximum range supported (2^32))")}}}return{componentOffsets:a,featureIds:o}}(t,d,a),w=y.componentOffsets,x=y.featureIds;r&&(x&&r.push(x.buffer),w&&r.push(w.buffer));var S=e.obb?null:A.create([0,0,0],[-1,-1,-1],[0,0,0,1]);c.vec3.copy(O,n),O[2]+=i,c.vec3.copy(E,O);for(var U=!1,G=0,_=new Array,P=0,R=t.geometries;P<R.length;P++){var C=R[P],H=o[G];++G;var q=e.geometryBuffer,z=b.interleaveGeometryBuffer(C,q,H,[{name:"color",byteValue:255}],["normal","normalCompressed"]),F=N(z,H),J=F.position,j=e.mbs,V=e.elevationOffset,L=m.fromJSON(e.indexSR),k=m.fromJSON(e.vertexSR),Q=m.fromJSON(e.renderSR);g.reprojectPoints(J,j,D,V,L,k,Q),S&&M(S,J,l);var X=F.normalCompressed;if(e.needNormals&&X){var K=B(z,H),W={normals:X,positions:J,normalInd:K,positionInd:K},Y=e.normalReferenceFrame,Z=p.createTypedView(q,C.params.vertexAttributes.normal);b.processAndInterleaveNormals(Y,Z,l,W)}var $=F.color;$&&!U&&(U=T($));var ee={globalTrafo:l},re=H[0].stride,te=1-.8*re/(re+4),ae=v.default(z,re/4,{minReduction:te,componentOffsets:w});if(null!=ae){K=ae.uniqueCount<65536?new Uint16Array(ae.indices):ae.indices;var oe=b.extractPositionData(ae.buffer,H,{originalIndices:K,componentOffsets:w});_.push({layout:H,interleavedVertexData:ae.buffer,indices:K,corMatrices:ee,hasColors:U,positionData:oe}),r&&(r.push(ae.buffer),r.push(K.buffer),r.push(oe.data.buffer),r.push(oe.indices.buffer))}else{oe=b.extractPositionData(z,H,{componentOffsets:w});_.push({layout:H,interleavedVertexData:z,corMatrices:ee,hasColors:U,positionData:oe}),r&&(r.push(z),r.push(oe.data.buffer),r.push(oe.indices.buffer))}S&&(c.vec3.transformMat4(S.center,S.center,l),I.bufferToBuffer(S.center,Q,0,S.center,L,0,1),S.center[2]-=V)}return{geometryBuffer:d,componentOffsets:w,featureIds:x,transformedGeometries:_,obb:S}}(e,r)},e}();!function(e){e.ensureDracoDecoder=function(e){return G&&G.DecoderBuffer||e&&!P(e)?i.resolve():(U||(U=y.getDecoderModule().then((function(e){return U=null,G=e}))),U.then((function(){})))}}(S||(S={}));var U,G,D=f.mat4f64.create(),O=d.vec3f64.create(),E=d.vec3f64.create(),_=l.quatf32.create();function P(e){return null==e.geometryIndex.header}function R(e,r,t,a){var o=4*e,i=G._malloc(o),s=r.GetAttribute(t,a);if(!r.GetAttributeFloatArrayForAllPoints(t,s,i,e))throw new n("draco:decode_error","Error while getting attribute values",{attributeId:a});var f=new Float32Array(G.HEAPU8.buffer,i,e).slice();return G._free(i),f}function M(e,r,t){if(e.halfSize[0]>0){c.vec3.subtract(O,e.center,e.halfSize),c.vec3.add(E,e.center,e.halfSize);for(var a=r.offsetIdx;a<r.data.length;a+=r.strideIdx)O[0]=Math.min(O[0],r.data[a]),O[1]=Math.min(O[1],r.data[a+1]),O[2]=Math.min(O[2],r.data[a+2]),E[0]=Math.max(E[0],r.data[a]),E[1]=Math.max(E[1],r.data[a+1]),E[2]=Math.max(E[2],r.data[a+2]);c.vec3.subtract(e.halfSize,E,O),c.vec3.scale(e.halfSize,e.halfSize,.5),c.vec3.add(e.center,O,E),c.vec3.scale(e.center,e.center,.5)}else{A.compute(r,e);var o=2*Math.sqrt(1+t[0]+t[5]+t[10]);_[0]=(t[9]-t[6])/o,_[1]=(t[2]-t[8])/o,_[2]=(t[4]-t[1])/o,_[3]=.25*o,u.quat.conjugate(_,_),u.quat.multiply(e.quaternion,_,e.quaternion)}}function T(e){for(var r=e.data,t=e.size,a=e.offsetIdx,o=e.strideIdx,n=a;n<r.length;n+=o)for(var i=0;i<t;i++)if(255!==r[n+i])return!0;return!1}function B(e,r){var t=e.byteLength/x.getStride(r);return w.generateDefaultIndexArray(t)}function N(e,r){for(var t={},a=0,o=r;a<o.length;a++){var n=o[a],i=new(x.getTypedArrayConstructor(n.type))(e),s=x.getBytesPerElement(n.type),f=n.count,u=n.offset/s,l=n.stride/s;t[n.name]={data:i,size:f,offsetIdx:u,strideIdx:l}}return t}return S}));