// COPYRIGHT Â© 2020 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.15/esri/copyright.txt for details.

define(["require","exports","../core/tsSupport/assignHelper","../core/tsSupport/declareExtendsHelper","../core/tsSupport/decorateHelper","../core/tsSupport/generatorHelper","../core/tsSupport/awaiterHelper","../geometry","../PopupTemplate","../rasterRenderers","../core/Error","../core/maybe","../core/MultiOriginJSONSupport","../core/promiseUtils","../core/accessorSupport/decorators","../core/accessorSupport/ensureType","./Layer","./mixins/OperationalLayer","./mixins/PortalLayer","./mixins/RefreshableLayer","./mixins/ScaleRangeLayer","./support/commonProperties","./support/DimensionalDefinition","./support/Field","./support/imageryRendererUtils","./support/RasterJobHandler","./support/TileInfo","./support/rasterDatasets/RasterFactory","../renderers/support/RasterSymbolizer","../support/popupUtils"],(function(e,r,t,n,i,o,s,a,l,p,d,u,c,y,f,h,m,b,v,g,_,I,R,J,H,S,P,x,w,D){return function(e){function r(r,t){var n=e.call(this,r)||this;return n._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},n._symbolizer=null,n.bandIds=null,n.fullExtent=null,n.interpolation="nearest",n.isReference=null,n.listMode="show",n.raster=null,n.rasterInfo=null,n.spatialReference=null,n.tileInfo=null,n.title=null,n.type="imagery-tile",n.url=null,n.operationalLayerType="ArcGISTiledImageServiceLayer",n.popupEnabled=!0,n.popupTemplate=null,n}return n(r,e),r.prototype.normalizeCtorArgs=function(e,r){return"string"==typeof e?t({url:e},r):e},r.prototype.load=function(e){var r=this,t=u.isSome(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).then((function(){return r._openRaster(t)}),(function(){return r._openRaster(t)}))),y.resolve(this)},Object.defineProperty(r.prototype,"multidimensionalDefinition",{set:function(e){this.raster&&(this._sliceId=this.raster.getSliceIndex(e)),this._set("multidimensionalDefinition",e)},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"defaultPopupTemplate",{get:function(){return this.createPopupTemplate()},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"fields",{get:function(){return[new J({name:"Raster.PixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})]},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"renderer",{set:function(e){this._set("renderer",e),this.updateRenderer()},enumerable:!0,configurable:!0}),r.prototype.readRenderer=function(e,r,t){var n=r&&r.layerDefinition&&r.layerDefinition.drawingInfo&&r.layerDefinition.drawingInfo.renderer,i=p.read(n,t)||void 0;if(null!=i)return i},r.prototype.createPopupTemplate=function(e){return D.createPopupTemplate(this,e)},r.prototype.updateRenderer=function(){return s(this,void 0,void 0,(function(){var e;return o(this,(function(r){switch(r.label){case 0:return this.loaded?JSON.stringify(this._cachedRendererJson)===JSON.stringify(this.renderer)?[2]:(e=this._rasterJobHandler.instance)?(this._symbolizer.renderer=this.renderer,this._symbolizer.bind(),[4,e.updateSymbolizer(this._symbolizer)]):[2]:[2];case 1:return r.sent(),this._cachedRendererJson=this.renderer.toJSON(),[2]}}))}))},r.prototype.applyRenderer=function(e,r){return s(this,void 0,void 0,(function(){var t,n,i;return o(this,(function(o){switch(o.label){case 0:return e&&e.pixels&&e.pixels.length>0?(t=r&&this.renderer&&"raster-stretch"===this.renderer.type,this.updateRenderer(),(i=this._rasterJobHandler.instance)?t?[4,i.stretch({pixelBlock:e,stretchParams:r})]:[3,2]:[3,5]):[2,null];case 1:return n=o.sent(),[3,4];case 2:return[4,i.symbolize(e)];case 3:n=o.sent(),o.label=4;case 4:return[3,6];case 5:n=t?this._symbolizer.simpleStretch(e,r):this._symbolizer.symbolize(e),o.label=6;case 6:return[2,n]}}))}))},r.prototype.fetchTile=function(e,r,n,i){return void 0===i&&(i={}),s(this,void 0,void 0,(function(){var s;return o(this,(function(o){switch(o.label){case 0:return[4,this._initJobHandler()];case 1:return o.sent(),this.multidimensionalDefinition&&(s=this._sliceId,i=t({multidimensionalDefinition:this.multidimensionalDefinition,sliceId:s},i)),[2,this.raster.fetchTile(e,r,n,i)]}}))}))},r.prototype.fetchPixels=function(e,r,n,i){return s(this,void 0,void 0,(function(){var s;return o(this,(function(o){switch(o.label){case 0:return[4,this._initJobHandler()];case 1:return o.sent(),this.multidimensionalDefinition&&(s=this._sliceId,i=t({multidimensionalDefinition:this.multidimensionalDefinition,sliceId:s},i)),[2,this.raster.fetchPixels(e,r,n,i)]}}))}))},r.prototype.identify=function(e,r){return void 0===r&&(r={}),this.raster.identify(e,r)},r.prototype.increaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount++},r.prototype.decreaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()},r.prototype._initJobHandler=function(){var e=this;if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;var r=new S;return this._rasterJobHandler.connectionPromise=r.initialize().then((function(){e._rasterJobHandler.instance=r,e.raster.rasterJobHandler=r,e.renderer&&e.updateRenderer()})).catch((function(){return null})),this._rasterJobHandler.connectionPromise},r.prototype._shutdownJobHandler=function(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this.raster.rasterJobHandler=null},r.prototype._openRaster=function(e){return s(this,void 0,void 0,(function(){var r,t,n,i,s,a,l,p,u,c,y;return o(this,(function(o){switch(o.label){case 0:return[4,x.open(this.raster||{url:this.url,signal:e})];case 1:if(r=o.sent(),this.url||(this.url=r.url),this.raster=r,!(t=r.rasterInfo))throw new d("tile-imagery-layer:load","cannot load resources on "+this.url);if(n=t.spatialReference,i=t.pixelSize,s=t.storageInfo,!(a=s.tileInfo)){for(l=[],p=s.maximumPyramidLevel||0,u=Math.max(i.x,i.y),c=1/.0254*96*u,y=0;y<=p;y++)l.push({level:p-y,resolution:u,scale:c}),u*=2,c*=2;a=new P({origin:s.origin,size:[s.blockWidth,s.blockHeight],spatialReference:n,lods:l}),s.tileInfo=a}return null==this.title&&(this.title=this.raster.datasetName),t.multidimensionalInfo&&(this._configDefaultSlice(),this._sliceId=this.raster.getSliceIndex(this.multidimensionalDefinition)),this._configDefaultRenderer(),[2,r]}}))}))},r.prototype._configDefaultSlice=function(){var e=this.raster.rasterInfo.multidimensionalInfo.variables[0],r=[];e.dimensions.forEach((function(t){r.push(new R({variableName:e.name,dimensionName:t.name,values:t.values[0],isSlice:!0}))})),this.multidimensionalDefinition=r},r.prototype._configDefaultRenderer=function(){var e=this.raster.rasterInfo,r=e.pixelType;this.bandIds||(this.bandIds=H.getDefaultBandCombination(e)),this.renderer||(this.renderer=H.createDefaultRenderer(e,this.bandIds)),"u8"===r&&this.renderer&&"stretchType"in this.renderer&&"min-max"===this.renderer.stretchType&&this.renderer.dynamicRangeAdjustment&&(this.renderer.dynamicRangeAdjustment=!1,this.renderer.statistics=this.renderer.statistics||[[0,255],[0,255],[0,255]]),this._symbolizer?(this._symbolizer.renderer=this.renderer,this._symbolizer.rasterInfo=e):this._symbolizer=new w({renderer:this.renderer,rasterInfo:e}),this._symbolizer.bind()||(this._symbolizer=null)},i([f.property()],r.prototype,"_cachedRendererJson",void 0),i([f.property()],r.prototype,"_sliceId",void 0),i([f.property()],r.prototype,"_rasterJobHandler",void 0),i([f.property()],r.prototype,"_symbolizer",void 0),i([f.property({type:[h.Integer],json:{write:!0}})],r.prototype,"bandIds",void 0),i([f.property({type:a.Extent}),f.aliasOf("rasterInfo.extent")],r.prototype,"fullExtent",void 0),i([f.property({type:String,json:{write:!0}})],r.prototype,"interpolation",void 0),i([f.property({type:Boolean,json:{read:!1}})],r.prototype,"isReference",void 0),i([f.property({type:["show","hide"]})],r.prototype,"listMode",void 0),i([f.property({type:[R]})],r.prototype,"multidimensionalDefinition",null),i([f.property()],r.prototype,"raster",void 0),i([f.property({readOnly:!0}),f.aliasOf("raster.rasterInfo")],r.prototype,"rasterInfo",void 0),i([f.property({type:a.SpatialReference}),f.aliasOf("rasterInfo.spatialReference")],r.prototype,"spatialReference",void 0),i([f.property({type:P,dependsOn:["rasterInfo"]}),f.aliasOf("rasterInfo.storageInfo.tileInfo")],r.prototype,"tileInfo",void 0),i([f.property()],r.prototype,"title",void 0),i([f.property({readOnly:!0,json:{read:!1}})],r.prototype,"type",void 0),i([f.property(I.url)],r.prototype,"url",void 0),i([f.property({type:["ArcGISTiledImageServiceLayer"]})],r.prototype,"operationalLayerType",void 0),i([f.property(I.popupEnabled)],r.prototype,"popupEnabled",void 0),i([f.property({type:l,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],r.prototype,"popupTemplate",void 0),i([f.property({readOnly:!0,dependsOn:["title"]})],r.prototype,"defaultPopupTemplate",null),i([f.property({readOnly:!0,type:[J]})],r.prototype,"fields",null),i([f.property({types:p.rasterRendererTypes,json:{read:{source:"layerDefinition.drawingInfo.renderer"},write:{target:"layerDefinition.drawingInfo.renderer"}}})],r.prototype,"renderer",null),i([f.reader("renderer")],r.prototype,"readRenderer",null),r=i([f.subclass("esri.layers.TileImageryLayer")],r)}(f.declared(_.ScaleRangeLayer(g.RefreshableLayer(b.OperationalLayer(v.PortalLayer(c.MultiOriginJSONMixin(m)))))))}));